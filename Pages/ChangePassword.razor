@inject UVGramWeb.Services.IAuthenticationService AuthenticationService;
@inject NavigationManager NavigationManager;
@inject Services.IAccountService AccountService;
@using UVGramWeb.Shared.Data
@page "/accounts/password/change/"

@if (DataLoaded)
{
    <div class="editprofile-chpassword">
    <div class="editprofilechp-content card">
        <sidebar class="editprofile-sidebar">
            <UVGramWeb.Pages.Components.EPSidebar></UVGramWeb.Pages.Components.EPSidebar>
        </sidebar>
        <article class="ep-rightside">
            <div class="ep-rs-content">
                <EditForm Model="Model" OnValidSubmit="OnValidSubmit">
                    <DataAnnotationsValidator />
                    <div class="ep-editprofile-form">

                        <div class="ep-data ep-photo-profile">
                            <aside>
                                <div class="userprofile-img-content">
                                    @*
                                        <UVGramWeb.Shared.UserProfile.UserProfile></UVGramWeb.Shared.UserProfile.UserProfile>
                                    *@
                                </div>
                            </aside>
                            <div class="ep-data ep-pp-data">
                                <h1>@AuthenticationService.User.Username</h1>
                            </div>
                        </div>
                        <div class="ep-data">
                            <aside>
                                <label class="epaside-data semibold" for="oldpassword">Contraseña anterior:</label>
                            </aside>
                            <div class="ep-input">
                                <InputText class="form-input-normal" aria-required="false" id="oldpassword"
                                    placeholder="" type="text" @bind-Value="Model.oldPassword" />
                            </div>
                        </div>
                        <div class="ep-data">
                            <aside>
                                <label class="epaside-data semibold" for="newpassword">Contraseña nueva:</label>
                            </aside>
                            <div class="ep-input">
                                <InputText class="form-input-normal" aria-required="false" id="newpassword"
                                    placeholder="" type="text" @bind-Value="Model.password" />
                            </div>
                        </div>
                        <div class="ep-data">
                            <aside>
                                <label class="epaside-data semibold" for="repeatnewpassword">Confirmar contraseña
                                    nueva:</label>
                            </aside>
                            <div class="ep-input">
                                <InputText class="form-input-normal" aria-required="false" id="repeatnewpassword"
                                    placeholder="" type="text" @bind-Value="PasswordCheck" />
                            </div>
                        </div>

                        <div class="ep-data">
                            <aside>
                            </aside>
                            <div class="ep-input">
                                <div class="actions">
                                    <button class="btn btn-primary">Cambiar contaseña</button>
                                </div>
                                @Message
                            </div>
                        </div>
                    </div>
                </EditForm>
            </div>
        </article>
    </div>
</div>
}


@code {
    private ChangeActualPassword Model { get; set; } = new ChangeActualPassword();
    private string PasswordCheck { get; set; }
    private bool done = false;
    private bool DataLoaded { get; set; } = false;
    private string Message { get; set; }

    protected override void OnInitialized()
    {

        if (CheckAuthentication())
        {
            DataLoaded = true;
        }
    }
    private bool CheckAuthentication()
    {
        if (AuthenticationService.User == null)
        {
            NavigationManager.NavigateTo("/login");
            return false;
        }
        return true;
    }

    private async void OnValidSubmit()
    {
        if (done)
        {
            return;
        }
        bool isUpdated = false;
        if (PasswordCheck.Equals(Model.password))
        {
            try
            {
                isUpdated = await AccountService.ChangePassword(Model);
                if (isUpdated)
                {
                    done = true;
                    Message = "Contraseña actualizada";
                }
            }
            catch (System.Exception error)
            {
                isUpdated = false;
                Message = "No se pudo actualizar la contraseña";
                throw error;
            }
        }
        StateHasChanged();
    }

}