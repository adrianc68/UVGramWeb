@inject NavigationManager NavigationManager
@using UVGramWeb.Shared.Data
@inject Services.IAccountService AccountService

<div class="su-signup-card">
    <div class="sus-form card">
        <div class="su-description">
            <UVGramWeb.Pages.Components.Logo></UVGramWeb.Pages.Components.Logo>
            <p class="text-muted">Regístrate para ser parte de la comunidad universitaria.</p>
        </div>
        <EditForm EditContext="@EditContext" OnInvalidSubmit="OnInvalidSubmit">
            <DataAnnotationsValidator />
            <div class="su-form">
                <div class="suf-inputs">
                    <div class="custom-form-floating">
                        <InputText id="email" @bind-Value="UserRegisterModel.email" autocomplete="off"
                            class="custom-form-input" aria-label="Dirección correo" required=true
                            aria-required="true" />
                        <label for="email" class="custom-form-floating-label">Dirección correo
                            electrónico</label>
                        <CustomValidationMessage For="@(() => UserRegisterModel.email)" />
                    </div>
                    <div class="custom-form-floating">
                        <InputText id="name" @bind-Value="UserRegisterModel.name" autocomplete="off"
                            class="custom-form-input" aria-label="Nombre completo" required=true aria-required="true" />
                        <label for="name" class="custom-form-floating-label">Nombre completo</label>
                        <CustomValidationMessage For="@(() => UserRegisterModel.name)" />
                    </div>
                    <div class="custom-form-floating">
                        <InputText id="telefono" @bind-Value="UserRegisterModel.phoneNumber" autocomplete="off"
                            class="custom-form-input" aria-label="Teléfono" required=true aria-required="true" />
                        <label for="telefono" class="custom-form-floating-label">Telefono</label>
                        <CustomValidationMessage For="@(() => UserRegisterModel.phoneNumber)" />
                    </div>
                    <div class="custom-form-floating">
                        <InputText id="username" @bind-Value="UserRegisterModel.username" autocomplete="off"
                            class="custom-form-input" aria-label="Nombre de usuario" required=true
                            aria-required="true" />
                        <label for="username" class="custom-form-floating-label">Nombre de usuario</label>
                        <CustomValidationMessage For="@(() => UserRegisterModel.username)" />
                    </div>
                    <div class="custom-form-floating">
                        <InputText id="password" @bind-Value="UserRegisterModel.password" type="password"
                            autocomplete="off" class="custom-form-input" aria-label="Contraseña" required=true
                            aria-required="true" />
                        <label for="password" class="custom-form-floating-label">Contraseña</label>
                        <CustomValidationMessage For="@(() => UserRegisterModel.password)" />
                    </div>
                </div>
            </div>
            <div class="su-buttons">
                <button class="custom-btn custom-btn-primary">
                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    else
                    {
                        <span> Registrarse </span>
                    }

                </button>
            </div>
            <ValidationSummary></ValidationSummary>

        </EditForm>
        <div class="su-error-message">
        </div>
        <p class="text-muted text-center su-conditions">Al registrarte, aceptas nuestra
            <strong>Condiciones</strong>,
            la<strong> política de datos</strong> y la <strong>política de cookies.</strong>
        </p>
    </div>

    <section class="su-login card">
        <span>¿Tienes una cuenta?</span>
        <button class="custom-btn custom-btn-secondary no-padding"
            @onclick="@(() => NavigationManager.NavigateTo("/login"))">Inicia
            sesión</button>
    </section>
</div>

@code {
    [Parameter] public Action MoveForward { get; set; }
    [Parameter] public UserRegister UserRegisterModel { get; set; }
    [Parameter] public EditContext EditContext { get; set; }
    private bool loading;
    private bool isUsernameRegistered = true;
    private bool isValidUsername = false;
    private bool isEmailRegistered;

    private void OnInvalidSubmit()
    {
        loading = true;

        if (EditContext.GetValidationMessages().ToList().Count == 1)
        {
            MoveForward?.Invoke();
        }
    }

    private async void ValidateUsername()
    {
        if (UserRegisterModel.username == null)
        {
            return;
        }
        try
        {
            isUsernameRegistered = await AccountService.VerifyUsername(UserRegisterModel.username);
        }
        catch (Exception error)
        {
            throw new UVGramWeb.Shared.Exceptions.InteralServerErrorException("El servidor ha tenido un error", error);
        }
    }

    private async void ValidateEmail()
    {
        if (UserRegisterModel.email == null)
        {
            return;
        }
        try
        {
            isEmailRegistered = await AccountService.VerifyEmailAddress(UserRegisterModel.email);
        }
        catch (Exception error)
        {
            throw new UVGramWeb.Shared.Exceptions.InteralServerErrorException("El servidor ha tenido un error", error);
        }
    }

}