@using Shared.Data
@inject UVGramWeb.Services.IAuthenticationService AuthService
@inject NavigationManager NavManager
@inject Services.IAccountService AccountService;

<div class="topbar-search">
    <input type="text" id="search" class="form-control" placeholder="Buscar..." aria-label="Buscar"
        @oninput="SearchUsers">

    @if (usersFilter.Count != 0)
    {
        <div class="topbar-search-users card">
            @foreach (var userSearch in usersFilter)
            {
                <UserDisplay User="@userSearch"></UserDisplay>
            }
        </div>
    }

</div>
<div class="topbar-actions">
    @{
        if (AuthService.User == null)
        {
            <button class="custom-btn custom-btn-primary" @onclick="@(() => NavManager.NavigateTo("/login"))">Iniciar
                sesi√≥n</button>
            <button class="custom-btn custom-btn-secondary" @onclick="@(() =>
    NavManager.NavigateTo("/signup"))">Registrarse</button>
        }
        else
        {
            <div class="tbt-actions">
                <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-label="home"></span>
                </NavLink>
                <NavLink class="nav-link">
                    <span class="oi oi-plus" aria-label="Publicar"></span>
                </NavLink>
                <NavLink class="nav-link" href="@($"/{AuthService.User.Username}")" Match="NavLinkMatch.All">
                    <span class="oi oi-person" aria-label="Mi perfil"></span>
                </NavLink>
                <NavLink class="nav-link" href="/logout">
                    <span class="oi oi-account-logout" title="Salir" aria-label="Salir"></span>
                </NavLink>
            </div>
        }
    }
</div>

@code {
    private List<UserSearch> usersFilter = new List<UserSearch>();

    private async void SearchUsers(ChangeEventArgs e)
    {
        string value = e.Value.ToString();
        if (!String.IsNullOrEmpty(value))
        {
            usersFilter = await AccountService.FilterUsers(Convert.ToString(e.Value));
        }
        else
        {
            usersFilter = new List<UserSearch>();
        }
        StateHasChanged();
    }

    private void ClearList()
    {
        usersFilter.Clear();
        StateHasChanged();
    }
}