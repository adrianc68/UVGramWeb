@using UVGramWeb.Models; 
@using System.ComponentModel;

    <section class="su-main card">
            <div class="su-description">
                <UVGramWeb.Shared.Logo.Logo></UVGramWeb.Shared.Logo.Logo>
                <p class="text-muted">Regístrate para ser parte de la comunidad.</p>
            </div>
    

            <div class="su-form">
                <div class="form-floating mb-3">
                    <InputText @bind-Value="account.Cuenta.Correo" id="email"  class="form-control"/>
                    <ValidationMessage class="text-danger" For="() => account.Cuenta.Correo" />
                    <label for="email">Dirección de correo electrónico</label>           
                </div> 
                    
                <div class="form-floating mb-3">
                    <InputText @bind-Value="account.Nombre" id="nombre"  class="form-control"/>
                    <label for="name">Nombre completo</label>
                    <ValidationMessage class="text-danger" For="() => account.Nombre"></ValidationMessage>        
                </div> 

                <div class="form-floating mb-3">
                    <InputText @bind-Value="account.NombreUsuario" id="nombreUsuario"  class="form-control"/>
                    <label for="username">Nombre de usuario</label>
                    <ValidationMessage class="text-danger" For="() => account.NombreUsuario"></ValidationMessage>
                </div>

                <div class="form-floating mb-3">
                    <InputText @bind-Value="account.Cuenta.Contrasena" type="password" id="password"  class="form-control"/>
                    <label for="password">Contraseña</label>
                    <ValidationMessage For="() => account.Cuenta.Contrasena"></ValidationMessage>
                </div>
            </div>

            <div class="su-buttons">
                <!-- <button class="btn btn-primary" @onclick="() => InvokeFunction(MoveForwardCallback)">Registrarte</button>ç -->
                <button class="btn btn-primary" @onclick="ValidateThis">Registrarte</button>
            </div>

            <div class="error-message"> 
                <p role="alert" class="text-danger">Mensaje de sistema</p>
            </div>
            <p class="text-muted text-center conditions">Al registrarte, aceptas nuestra <strong>Condiciones</strong>, la<strong>política de datos</strong> y la <strong>política de cookies.</strong></p>
    </section>

    <section class="su-login card">
            <div class="su-l-content">
                <span>¿Tienes una cuenta?</span>
                <NavLink class="nav-link" href="login">Inicia sesión</NavLink>
            </div>
    </section>

@code {
    [CascadingParameter(Name = "EditContextValue")]
    protected EditContext? editContext { get; set; }

    [CascadingParameter(Name = "AccountValue")]
    protected User account { get; set; }

    [Parameter]
    public Action? MoveForwardCallback { get; set; }

    [Parameter]
    public Action? MoveBackwardCallback { get; set; }

    private void InvokeFunction(Action function) {
        function.Invoke();
    }

    void ValidateThis() {
        if(editContext.Validate()) {
            InvokeFunction(MoveForwardCallback);
        }
    }
 
}